openapi: "3.0.3"
info:
  title: "Parking Meter"
  description: "API for parking spots"
  version: "1.0.0"
tags:
  - name: "Parking Spot"
    description: "Operations related to parking spots"
  - name: "Ticket"
    description: "Operations related to parking tickets"
paths:
  /parking_spots:
    get:
      tags:
        - Parking Spot
      summary: "Retrieve all parking spots"
      operationId: "findAllSpots"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ParkingSpotResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Parking Spot
      summary: "Create a new parking spot"
      description: "Create a new parking spot"
      operationId: "createSpot"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParkingSpotRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /parking_spots/{id}:
    get:
      tags:
        - Parking Spot
      summary: "Retrieve parking spot by ID"
      operationId: "findById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParkingSpotResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Parking Spot
      summary: "Update parking spot"
      operationId: "updateParkingSpot"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParkingSpotRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParkingSpotResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Parking Spot
      summary: "Delete parking spot"
      operationId: "deleteParkingSpot"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /cep/{cep}:
    get:
      tags:
        - Parking Spot
      summary: "Retrieve parking spot by CEP"
      operationId: "findByCep"
      parameters:
        - name: "cep"
          in: "path"
          required: true
          schema:
            type: "string"
            pattern: "^\\d{5}-\\d{3}$"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParkingSpotResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /tickets:
    post:
      tags:
        - Ticket
      summary: "Create a new parking ticket"
      operationId: "createTicket"
      requestBody:
        description: "Information to create a new ticket"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TicketRequest"
      responses:
        "201":
          description: "Ticket created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TicketResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ParkingSpotRequest:
      type: "object"
      properties:
        cep:
          type: "string"
          pattern: "^\\d{5}-\\d{3}$"
          example: "12345-678"
        location:
          type: "string"
          pattern: "^[LD]\\d+$"
          example: "L1"
        logradouro:
          type: "string"
          example: "Rua Exemplo"
        bairro:
          type: "string"
          example: "Centro"
        cidade:
          type: "string"
          example: "SÃ£o Paulo"
        estado:
          type: "string"
          pattern: "^[A-Z]{2}$"
          example: "SP"
        pais:
          type: "string"
          example: "Brasil"
        quantity:
          type: "integer"
          format: "int32"
          example: 10
    ParkingSpotResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        cep:
          type: "string"
        logradouro:
          type: "string"
        bairro:
          type: "string"
        cidade:
          type: "string"
        estado:
          type: "string"
        pais:
          type: "string"
        location:
          type: "string"
        quantity:
          type: "integer"
          format: "int32"
    TicketResponse:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 1
        parkingSpotId:
          type: "integer"
          format: "int64"
          description: "ID of the parking spot associated with the ticket"
          example: 1
        purchasedAt:
          type: "string"
          format: "date-time"
          description: "Time when the ticket was purchased"
          example: "2024-10-11T10:00:00Z"
        validUntil:
          type: "string"
          format: "date-time"
          description: "Time when the ticket expires"
          example: "2024-10-11T12:00:00Z"
        licensePlate:
          type: "string"
          description: "License plate of the vehicle"
          example: "ABC1234"
    TicketRequest:
      type: object
      properties:
        parkingSpotId:
          type: "integer"
          format: "int64"
          example: 1
        hours:
          type: "integer"
          format: "int32"
          minimum: 1
          maximum: 3
          example: 2
        licensePlate:
          type: "string"
          example: "ABC1234"
    ErrorResponse:
      type: object
      properties:
        message:
          type: "string"
          example: "messages"
        timestamp:
          type: "string"
          format: "date-time"
          example: "2024-10-11T10:00:00Z"